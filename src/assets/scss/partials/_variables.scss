/**
 * Breakpoints
 */

$breakpoints: (
	frame:		1920px,

	xxx-large:	2560px,		// laptop 4K
	xx-large:	1440px,		// laptop large
	x-large:	1024px,		// laptop
	large:		768px,		// tablet
	medium:		425px,		// mobile large
	small:		375px,		// mobile medium
	x-small:	320px,		// mobile small
	xx-small:	280px,		// mobile x-small
);

// 이상
@mixin respond-above($breakpoint) {
	@if map-has-key($breakpoints, $breakpoint) {
		$breakpoint-value: map-get($breakpoints, $breakpoint);
		@media (min-width: $breakpoint-value) {
			@content;
		}
	} @else {
		@warn 'Invalid breakpoint: #{$breakpoint}.';
	}
}

// 이하
@mixin respond-below($breakpoint) {
	@if map-has-key($breakpoints, $breakpoint) {
		$breakpoint-value: map-get($breakpoints, $breakpoint);
		@media (max-width: ($breakpoint-value - 1)) {
			@content;
		}
	} @else {
		@warn 'Invalid breakpoint: #{$breakpoint}.';
	}
}

@mixin respond-between($lower, $upper) {
	@if map-has-key($breakpoints, $lower) and map-has-key($breakpoints, $upper) {
		$lower-breakpoint: map-get($breakpoints, $lower);
		$upper-breakpoint: map-get($breakpoints, $upper);
		@media (min-width: $lower-breakpoint) and (max-width: ($upper-breakpoint - 1)) {
			@content;
		}
	} @else {
		@if (map-has-key($breakpoints, $lower) == false) {
			@warn 'Your lower breakpoint was invalid: #{$lower}.';
		}
		@if (map-has-key($breakpoints, $upper) == false) {
			@warn 'Your upper breakpoint was invalid: #{$upper}.';
		}
	}
}


/**
 * Vertical rhythm
 */

$vertical-rhythm: (
	laptop: (
		content: 8rem,
		section: 4rem,
		subsection: 3rem,
		subsubsection: 2rem,
	),
	mobile: (
		content: 4rem,
		section: 2.5rem,
		subsection: 2rem,
		subsubsection: 1.5rem,
	)
);

/**
 * Gutter
 */

$gutter: (
	laptop: (
		content: 4rem,
		section: 3rem,
		subsection: 2rem,
		subsubsection: 1.5rem,
	),
	mobile: (
		content: 1.5rem,
		section: 1.5rem,
		subsection: 1rem,
		subsubsection: 1rem,
	)
);


/**
 * Color theme creation
 */

// Color palettes
$color-palettes: (
	base: (
		100: #000000,
		090: #191919,
		080: #2d2d2d,
		070: #484848,
		060: #646464,
		050: #848484,
		040: #a3a3a3,
		030: #bcbcbc,
		020: #d8d8d8,
		010: #ebebeb,
		005: #f5f5f5,
		000: #ffffff,
	),
	primary: (
		100: #000000,
		090: #330b0c,
		080: #661618,
		070: #982125,
		060: #cb2c31,
		050: #fe373d,
		040: #fe5f64,
		030: #fe878b,
		020: #ffbfc1,
		010: #ffdfe0,
		005: #ffedee,
		000: #ffffff,
	),

	secondary: (
		010: #3ab8ff,
		020: #ffb274,
	),

	etc: (
		010: #f2f4f6,
	),
);
// Create Color
@function color($theme: normal, $variant: 00, $opacity: 1) {
	$set-color: map-get($color-palettes, $theme, $variant);
	$create-color: rgba(red($set-color),green($set-color),blue($set-color),$opacity);
	@return $create-color;
}


/**
 * Font systems
 */

// Font theme
$font-theme: (
	bui-body: (
		font-family: #{Roboto, Noto Sans KR, Apple SD Gothic Neo, Malgun Gothic, 맑은 고딕, dotum, 돋움, sans-serif},
		letter-spacing: normal,
		font-weight: (
			thin:			100,
			extra-light:	200,
			light:			300,
			regular:		400,
			medium:			500,
			semi-bold:		500,
			bold:			700,
			black:			900,
		),
	),
	bui-head: (
		font-family: #{Roboto Mono, Noto Sans KR, Apple SD Gothic Neo, Malgun Gothic, 맑은 고딕, dotum, 돋움, sans-serif},
		letter-spacing: normal,
		font-weight: (
			thin:			100,
			extra-light:	200,
			light:			300,
			regular:		400,
			medium:			500,
			semi-bold:		600,
			bold:			700,
			black:			700,
		),
	),
	code: (
		font-family: #{Consolas, Courier New, monospace, Apple SD Gothic Neo, Malgun Gothic, 맑은 고딕, dotum, 돋움, sans-serif},
		letter-spacing: normal,
		font-weight: (
			thin:			100,
			extra-light:	200,
			light:			300,
			regular:		400,
			medium:			500,
			semi-bold:		500,
			bold:			700,
			black:			900,
		),
	),
	default: (
		font-family: #{Noto Sans KR, Apple SD Gothic Neo, Malgun Gothic, 맑은 고딕, dotum, 돋움, sans-serif},
		letter-spacing: normal,
		font-weight: (
			thin:			100,
			light:			300,
			regular:		400,
			medium:			400,
			bold:			700,
			black:			900,
		),
	),
	kr: (
		font-family: #{Noto Sans KR, Apple SD Gothic Neo, Malgun Gothic, 맑은 고딕, dotum, 돋움, sans-serif},
		letter-spacing: normal,
		font-weight: (
			thin:			100,
			light:			300,
			regular:		400,
			medium:			400,
			bold:			700,
			black:			900,
		),
	),
	en: (
		font-family: #{Opensans, Apple SD Gothic Neo, Malgun Gothic, 맑은 고딕, dotum, 돋움, sans-serif},
		letter-spacing: normal,
		font-weight: (
			thin:			300,
			light:			300,
			regular:		300,
			medium:			600,
			bold:			600,
			black:			900,
		),
	),
);

// Font outlines
$font-outline: (
	head: (
		xxx-large:	(line-height: 48rem, font-size: calc(48rem / 1.25)),
		xx-large:	(line-height: 40rem, font-size: calc(40rem / 1.25)),
		x-large:	(line-height: 32rem, font-size: calc(32rem / 1.25)),
		large:		(line-height: 28rem, font-size: calc(28rem / 1.25)),
		medium:		(line-height: 24rem, font-size: calc(24rem / 1.25)),
		small:		(line-height: 20rem, font-size: calc(20rem / 1.25)),
		x-small:	(line-height: 18rem, font-size: calc(18rem / 1.25)),
		xx-small:	(line-height: 16rem, font-size: calc(16rem / 1.25)),
	),

	body: (
		xxx-large:	(line-height: 48rem, font-size: calc(48rem / 1.5)),
		xx-large:	(line-height: 40rem, font-size: calc(40rem / 1.5)),
		x-large:	(line-height: 32rem, font-size: calc(32rem / 1.5)),
		large:		(line-height: 28rem, font-size: calc(28rem / 1.5)),
		medium:		(line-height: 24rem, font-size: calc(24rem / 1.5)),
		small:		(line-height: 20rem, font-size: calc(20rem / 1.5)),
		x-small:	(line-height: 18rem, font-size: calc(18rem / 1.5)),
		xx-small:	(line-height: 16rem, font-size: calc(16rem / 1.5)),
	),
);

// Create font declaration
@mixin font($outline: &, $size: &, $line-height: &, $style: &, $weight: &, $family: &, $letter-spacing: &) {
	@if $size != & {
		@if $outline != & {
			font: {size: map-get($font-outline, $outline, $size, font-size);}
			@if $line-height != & {
				line-height: $line-height;
			} @else {
				line-height: map-get($font-outline, $outline, $size, line-height);
			}
		} @else {
			font: {size: map-get($font-outline, body, $size, font-size);}
			@if $line-height != & {
				line-height: $line-height;
			} @else {
				line-height: map-get($font-outline, $outline, $size, line-height);
			}
		}
	}
	@if $style != & {
		font: {style: $style;}
	}
	@if $weight != & {
		@if $family != & {
			font: {weight: map-get($font-theme, $family, font-weight, $weight);}
		} @else {
			font: {weight: map-get($font-theme, default, font-weight, $weight);}
		}
	}
	@if $family != & {
		font: {family: map-get($font-theme, $family, font-family);}
	}
	@if $letter-spacing != & {
		letter-spacing: $letter-spacing;
	}
}


/**
 * System icons
 */

// Icon lit
$symbol-list: (
	// sample
	sample:						(size: 24 24, path: ''),

	// bui
	bui:						(size: 24 24, path: 'M9.4 16.6L4.8 12l4.6-4.6L8 6l-6 6 6 6 1.4-1.4zm5.2 0l4.6-4.6-4.6-4.6L16 6l6 6-6 6-1.4-1.4z'),

	// action
	fill-arrow-back:			(size: 24 24, path: 'M12.7,5.7a1,1,0,0,0-1.4-1.4l-7,7a1,1,0,0,0,0,1.4l7,7a1,1,0,0,0,1.4-1.4L7.4,13H19a1,1,0,0,0,0-2H7.4Z'),
	fill-camera:				(size: 24 24, path: 'M14.4,12.65a2.4,2.4,0,1,1-2.4-2.4A2.43,2.43,0,0,1,14.4,12.65Zm-6-5.9,1.4-1.5h4.5l1.4,1.5H18a1.54,1.54,0,0,1,1.5,1.5v9a1.54,1.54,0,0,1-1.5,1.5H6a1.54,1.54,0,0,1-1.5-1.5v-9A1.54,1.54,0,0,1,6,6.75Zm-.2,6A3.8,3.8,0,1,0,12,9,3.8,3.8,0,0,0,8.2,12.75Z'),
	fill-caret-down:			(size: 24 24, path: 'M11,16.5a1.27,1.27,0,0,0,2,0l5.7-7.3a1.36,1.36,0,0,0-1-2.2H6.3a1.36,1.36,0,0,0-1,2.2Z'),
	fill-caret-up:				(size: 24 24, path: 'M13,7.5a1.27,1.27,0,0,0-2,0l-5.7,7.3a1.36,1.36,0,0,0,1,2.2H17.7a1.36,1.36,0,0,0,1-2.2Z'),
	fill-check:					(size: 24 24, path: 'M19.63,6.49a1.25,1.25,0,0,1,0,1.77l-9.25,9.25a1.24,1.24,0,0,1-1.76,0L4.37,13.26a1.25,1.25,0,0,1,1.76-1.77L9.5,14.86l8.37-8.37A1.24,1.24,0,0,1,19.63,6.49Z'),
	fill-chevron-down:			(size: 24 24, path: 'M4.37,7.48a1.24,1.24,0,0,1,1.76,0L12,13.35l5.87-5.87a1.25,1.25,0,1,1,1.76,1.77L12,16.88,4.37,9.25A1.25,1.25,0,0,1,4.37,7.48Z'),
	fill-chevron-left:			(size: 24 24, path: 'M16.52,4.37a1.24,1.24,0,0,1,0,1.76L10.65,12l5.87,5.87a1.25,1.25,0,1,1-1.77,1.76L7.12,12l7.63-7.63A1.25,1.25,0,0,1,16.52,4.37Z'),
	fill-chevron-right:			(size: 24 24, path: 'M7.48,19.63a1.24,1.24,0,0,1,0-1.76L13.35,12,7.48,6.13A1.25,1.25,0,0,1,9.25,4.37L16.88,12,9.25,19.63A1.25,1.25,0,0,1,7.48,19.63Z'),
	fill-chevron-up:			(size: 24 24, path: 'M19.63,16.52a1.24,1.24,0,0,1-1.76,0L12,10.65,6.13,16.52a1.25,1.25,0,0,1-1.76-1.77L12,7.12l7.63,7.63A1.25,1.25,0,0,1,19.63,16.52Z'),
	fill-circle-caution:		(size: 24 24, path: 'M12,4a8,8,0,1,0,8,8A8,8,0,0,0,12,4Zm0,12a1,1,0,1,1,1-1A1,1,0,0,1,12,16Zm1-4a1,1,0,0,1-2,0V9a1,1,0,0,1,2,0Z'),
	fill-circle-delete:			(size: 24 24, path: 'M12,4a8,8,0,1,0,8,8A8,8,0,0,0,12,4Zm4,10.63A1,1,0,1,1,14.63,16L12,13.41,9.37,16A1,1,0,1,1,8,14.63L10.59,12,8,9.37A1,1,0,1,1,9.37,8L12,10.59,14.63,8A1,1,0,1,1,16,9.37L13.41,12Z'),
	fill-circle-information:	(size: 24 24, path: 'M12,4a8,8,0,1,0,8,8A8,8,0,0,0,12,4Zm1,11a1,1,0,0,1-2,0V12a1,1,0,0,1,2,0Zm-1-5a1,1,0,1,1,1-1A1,1,0,0,1,12,10Z'),
	fill-circle-more:			(size: 24 24, path: 'M12.13,4a8,8,0,1,0,8,8A8,8,0,0,0,12.13,4Zm-4,9.5A1.5,1.5,0,1,1,9.63,12,1.5,1.5,0,0,1,8.13,13.5Zm4,0a1.5,1.5,0,1,1,1.5-1.5A1.5,1.5,0,0,1,12.13,13.5Zm4,0a1.5,1.5,0,1,1,1.5-1.5A1.5,1.5,0,0,1,16.13,13.5Z'),
	fill-close:					(size: 24 24, path: 'M19,6.77A1.25,1.25,0,1,0,17.23,5L12,10.23,6.77,5A1.25,1.25,0,0,0,5,6.77L10.23,12,5,17.23A1.25,1.25,0,1,0,6.77,19L12,13.77,17.23,19A1.25,1.25,0,1,0,19,17.23L13.77,12Z'),
	fill-download:				(size: 24 24, path: 'M11,6.3v5.6L8.7,9.6A1,1,0,0,0,7.3,11L12,15.7,16.7,11a1,1,0,0,0-1.4-1.4L13,11.9V6.3a1,1,0,0,0-2,0ZM6,16.7a1,1,0,0,0,0,2H18a1,1,0,0,0,0-2Z'),
	fill-notice:				(size: 24 24, path: 'M5.3,15.3H7.6l4.9,3.3a1.33,1.33,0,0,0,2.1-1.1V6.5a1.33,1.33,0,0,0-2.1-1.1L7.7,8.7H5.3A1.32,1.32,0,0,0,4,10v4A1.32,1.32,0,0,0,5.3,15.3Zm12.6-.2a2.77,2.77,0,0,1-1.3.3V8.7a3.08,3.08,0,0,1,1.3.3,4.13,4.13,0,0,1,1.1.7,2.59,2.59,0,0,1,.7,1.1,2.77,2.77,0,0,1,.3,1.3,3.08,3.08,0,0,1-.3,1.3,4.13,4.13,0,0,1-.7,1.1A10.91,10.91,0,0,1,17.9,15.1Z'),
	fill-plus:					(size: 24 24, path: 'M13.25,5.25a1.25,1.25,0,0,0-2.5,0v5.5H5.25a1.25,1.25,0,0,0,0,2.5h5.5v5.5a1.25,1.25,0,0,0,2.5,0v-5.5h5.5a1.25,1.25,0,0,0,0-2.5h-5.5Z'),
	fill-search:				(size: 24 24, path: 'M19.63,17.87l-2-2a7.5,7.5,0,1,0-1.76,1.76l2,2a1.24,1.24,0,0,0,1.76-1.76ZM11.5,16.5a5,5,0,1,1,5-5A5,5,0,0,1,11.5,16.5Z'),
	fill-write:					(size: 24 24, path: 'M14.4,5.59A2.16,2.16,0,0,1,15.93,5a2.1,2.1,0,0,1,.82.16,2.19,2.19,0,0,1,1.17,1.17,2.21,2.21,0,0,1,0,1.65,2.21,2.21,0,0,1-.47.7L8.06,18a.61.61,0,0,1-.26.15l-3,.75a.55.55,0,0,1-.53-.15.56.56,0,0,1-.15-.54l.75-3A.61.61,0,0,1,5,15ZM12.83,17.17a1,1,0,1,0,0,2h6a1,1,0,0,0,0-2Z'),
	line-calendar-today:		(size: 24 24, path: 'M17.2,6.09H15.86V4.8a.78.78,0,0,0-1.55,0V6.09H9.69V4.8a.78.78,0,0,0-1.55,0V6.09H6.8A2.2,2.2,0,0,0,4.54,8.23v9.6A2.2,2.2,0,0,0,6.8,20H17.2a2.2,2.2,0,0,0,2.26-2.14V8.23A2.2,2.2,0,0,0,17.2,6.09Zm.71,11.74a.67.67,0,0,1-.71.6H6.8a.67.67,0,0,1-.71-.6V12.2H17.91Zm0-7.17H6.09V8.23a.66.66,0,0,1,.71-.6H8.14v.26a.78.78,0,0,0,1.55,0V7.63h4.62v.26a.78.78,0,0,0,1.55,0V7.63H17.2a.66.66,0,0,1,.71.6Z'),
	line-comment:				(size: 24 24, path: 'M18.5,5H5.5A1.5,1.5,0,0,0,4,6.5v11a1.5,1.5,0,0,0,2.71.89L9.2,15h9.3A1.5,1.5,0,0,0,20,13.5v-7A1.5,1.5,0,0,0,18.5,5Zm0,8.5H8.44l-2.94,4V6.5h13Z'),
	line-description:			(size: 24 24, path: 'M18.69,8.71a.78.78,0,0,0-.16-.24L14,4a.78.78,0,0,0-.24-.16.72.72,0,0,0-.29-.06h-6a2.27,2.27,0,0,0-1.59.66A2.21,2.21,0,0,0,5.25,6V18A2.25,2.25,0,0,0,7.5,20.25h9A2.25,2.25,0,0,0,18.75,18V9A.72.72,0,0,0,18.69,8.71Zm-4.44-2.4,1.94,1.94H14.25ZM17,18.53a.75.75,0,0,1-.53.22h-9A.75.75,0,0,1,6.75,18V6a.75.75,0,0,1,.75-.75h5.25V9a.76.76,0,0,0,.75.75h3.75V18A.75.75,0,0,1,17,18.53Zm-1.28-5.78a.76.76,0,0,1-.75.75H9A.75.75,0,0,1,9,12h6A.76.76,0,0,1,15.75,12.75Zm0,3a.76.76,0,0,1-.75.75H9A.75.75,0,0,1,9,15h6A.76.76,0,0,1,15.75,15.75Z'),
	line-home:					(size: 24 24, path: 'M18.47,9,13.36,4.61a2.09,2.09,0,0,0-2.72,0L5.53,9a2.11,2.11,0,0,0-.73,1.59v8.26A1.06,1.06,0,0,0,5.86,19.9H8.91a1,1,0,0,0,1-1V15.42a2.17,2.17,0,0,1,1.88-2.2,2.06,2.06,0,0,1,2.24,2v3.6a1,1,0,0,0,1,1h3.05a1.06,1.06,0,0,0,1.06-1.06V10.58A2.11,2.11,0,0,0,18.47,9Zm-.85,9.37h-2a0,0,0,0,1,0,0V15.48a3.73,3.73,0,0,0-2.95-3.75A3.6,3.6,0,0,0,8.4,15.27v3.06a0,0,0,0,1,0,0h-2a0,0,0,0,1,0,0V10.58a.57.57,0,0,1,.19-.42l5.11-4.38a.57.57,0,0,1,.72,0l5.11,4.38a.57.57,0,0,1,.19.42v7.75A0,0,0,0,1,17.62,18.36Z'),
	line-notice:				(size: 24 24, path: 'M12.6,4.92,7.2,8.62H4.5a1,1,0,0,0-1,1v4.7a1,1,0,0,0,1,1H7.1L12.5,19a1,1,0,0,0,1.6-.9V5.82A1,1,0,0,0,12.6,4.92Zm.1,12.3-5-3.4H5.1v-3.7H7.7l5-3.4Zm7.6-6.6a2.73,2.73,0,0,0-.6-1.2,3.13,3.13,0,0,0-1.1-.9,3.26,3.26,0,0,0-1.4-.4,1.47,1.47,0,0,0-1.5,1.5v4.7a1.47,1.47,0,0,0,1.5,1.5,2.3,2.3,0,0,0,1.4-.4,4.81,4.81,0,0,0,1.1-.9,3.38,3.38,0,0,0,.6-1.2,5.9,5.9,0,0,0,.2-1.4A6.88,6.88,0,0,0,20.3,10.62Zm-1.5,2.3c0,.1-.1.2-.1.3s-.2.3-.3.5a2.65,2.65,0,0,1-.6.5,1.45,1.45,0,0,1-.7.2V9.62a1.85,1.85,0,0,1,.7.2,2.65,2.65,0,0,1,.6.5,2.19,2.19,0,0,1,.3.5c0,.1.1.2.1.3a2.77,2.77,0,0,1,.1.9A2.77,2.77,0,0,1,18.8,12.92Z'),
	line-profile:				(size: 24 24, path: 'M19.23,16.91a10,10,0,0,0-.32-1.19,9.52,9.52,0,0,0-1.58-2.91,7.77,7.77,0,0,0-2.42-2l-.35-.16a3.77,3.77,0,1,0-5.12,0l-.35.16a7.77,7.77,0,0,0-2.42,2,9.52,9.52,0,0,0-1.58,2.91,10,10,0,0,0-.32,1.19,2.54,2.54,0,0,0,2.6,3h9.26A2.53,2.53,0,0,0,19.23,16.91ZM12,5.66A2.23,2.23,0,1,1,9.77,7.89,2.23,2.23,0,0,1,12,5.66Zm4.63,12.68H7.37a1,1,0,0,1-1.09-1.11,8.48,8.48,0,0,1,.27-1,7.79,7.79,0,0,1,1.32-2.43A6,6,0,0,1,9.79,12.2a4.79,4.79,0,0,1,4.42,0,6,6,0,0,1,1.92,1.58,7.79,7.79,0,0,1,1.32,2.43,8.48,8.48,0,0,1,.27,1A1,1,0,0,1,16.63,18.34Z'),

	// bullet
	bullet-dot:					(size: 24 24, path: 'M12,10c-1.1,0-2,0.9-2,2s0.9,2,2,2s2-0.9,2-2S13.1,10,12,10z'),
	bullet-dash:				(size: 24 24, path: 'M16,13H8v-2h8V13z'),
	bullet-square:				(size: 24 24, path: 'M14,14h-4v-4h4V14z'),
	bullet-star:				(size: 24 24, path: 'M10,14.1l1-1.7l-1.8-0.7l0.3-0.8l1.9,0.5l0.2-2h0.9l0.2,1.9l1.9-0.4l0.3,0.8L13,12.4l1,1.7l-0.7,0.5L12,13l-1.3,1.5L10,14.1z'),

);

// Create system icon (RGB는 익스플로러를 대응하기 위해 사용 합니다.)
@function icon($name, $color, $backgroundColor: &) {
	$size: map-get($symbol-list, $name, 'size');
	$path: map-get($symbol-list, $name, 'path');

	@if $backgroundColor != & {
		$data: "data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 #{$size}'%3E %3Cpath fill='rgba(" + red($backgroundColor) + "," + green($backgroundColor) + "," + blue($backgroundColor) + ",1)' d='M0,0h24v24H0V0z'/%3E %3Cpath fill='rgba(" + red($color) + "," + green($color) + "," + blue($color) + ",1)' d='#{$path}'/%3E%3C/svg%3E";
		@return url($data);
	} @else {
		$data: "data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 #{$size}'%3E %3Cpath fill='none' d='M0,0h24v24H0V0z'/%3E %3Cpath fill='rgba(" + red($color) + "," + green($color) + "," + blue($color) + ",1)' d='#{$path}'/%3E%3C/svg%3E";
		@return url($data);
	}
}