/*
 * btn system reset
*/

input.btn,
button.btn {
	overflow: visible;
	margin: 0;
	padding: 0;
	cursor: pointer;
	border: hidden;
	background-color: transparent;
	appearance: none;
}

.btn svg {
	display: block;
	position: relative;
	top: 0;
	left: 0;
}

/*
 * btn module-b system
*/

/*
* @ module-b accent
*
* @ $text-color
* @ $border-color
* @ $background-color
*/
$btn-module-b-accent: (
	'accent-01'		color(primary, 01) color(primary, 01) color(primary, 01),
	'accent-02'		color(secondary, 01) color(secondary, 01) color(secondary, 01),
	'normal-00'		color(base, 00) color(base, 00) color(base, 00),
	'normal-01'		color(base, 01) color(base, 01) color(base, 01),
	'normal-02'		color(base, 05) color(base, 05) color(base, 05),
	'normal-03'		color(base, 03) color(base, 06) color(base, 06),
);

/*
 * module-b outline
 *
 * @ $padding-right
 * @ $padding-left
 * @ $height
 * @ $font-weight
 * @ $line-height
 * @ $font-size
 * @ $border-width
 * @ $border-radius ($height / $border-radius)
 * @ $symbol-size
 * @ $symbol-margin
 */  
$btn-module-b-outline: (
	'small'			22rem 22rem 44rem 700 1.5 14rem 1rem 6 1.5em 2rem,
	'medium'		24rem 24rem 48rem 700 1.5 16rem 1rem 6 1.5em 3rem,
	'large'			28rem 28rem 56rem 700 1.5 18rem 1rem 6 1.5em 4rem,
	'x-large'		32rem 32rem 70rem 700 1.5 21rem 1rem 6 1.5em 5rem,
);

// btn module-b reset
 a.btn.module-b {
	 text-decoration: none;
 }

 .btn.module-b {
	// general
	display: flex;
	align-items: center;
	justify-content: center;
	@include font((family: default)...);
	box-sizing: border-box;
	border-style: solid;

	.btn-text {
		display: flex;
		align-items: center;
		justify-content: center;
		text-align: center;
	}

	&.style-c {
		border-radius: 100em;
	}

	// icon
	// 1. 아이콘의 유무는 특정 클래스명으로 한다.
	// 2. 아이콘의 위치는 특정 클래스명으로 한다.
	// 3. 아이콘의 종류는 지정한 아이콘셋(클래스명)으로 한다.
	// 4. 아이콘의 사이즈는 outline별로 달라야 한다.
	//		1) 행간에 맞춘다.
	//		2) 별도의 사이즈를 지정한다.
	// 5. 무조건 중앙에 또는 상단 기준을 택일
	// 6. accent에 따라 컬러를 다르게 한다.

	&[class*=symbol-ltr-] .btn-text::before,
	&[class*=symbol-rtl-] .btn-text::after {
		content: '';
		display: block;
		background-repeat: no-repeat;
		background-size: cover;
	}

	// accent
	@each $name, $text-color, $border-color, $background-color in $btn-module-b-accent {
		&.type-line.#{$name} {
			color: $text-color;
			border-color: $border-color;
			background-color: color(base, 10);

			// icon
			@each $icon-name, $icon in $symbol-list {
				&.symbol-ltr-#{$icon-name} {.btn-text {&::before {background-image: icon($icon-name, $text-color);}}}
				&.symbol-rtl-#{$icon-name} {.btn-text {&::after {background-image: icon($icon-name, $text-color);}}}
			}
		}

		&.type-fill.#{$name} {
			color: #fff;
			border-color: $border-color;
			background-color: $background-color;

			// icon
			@each $icon-name, $icon in $symbol-list {
				&.symbol-ltr-#{$icon-name} {.btn-text {&::before {background-image: icon($icon-name, #fff);}}}
				&.symbol-rtl-#{$icon-name} {.btn-text {&::after {background-image: icon($icon-name, #fff);}}}
			}
		}
	}

	// outline
	@each $name, $padding-right, $padding-left, $height, $font-weight, $line-height, $font-size, $border-width, $border-radius, $symbol-size, $symbol-margin in $btn-module-b-outline {
		&.#{$name} {
			padding-right: $padding-right;
			padding-left: $padding-left;
			height: $height;
			font-weight: $font-weight;
			line-height: $line-height;
			font-size: $font-size;
			border-width: $border-width;

			&.style-b {
				border-radius: calc($height / $border-radius);
			}

			// icon
			&[class*=symbol-ltr-] .btn-text::before,
			&[class*=symbol-rtl-] .btn-text::after {
				width: $symbol-size;
				min-width: $symbol-size;
				height: $symbol-size;
			}

			
			&[class*="symbol-ltr"] {
				padding-left: calc($padding-right * 3 / 4);
				.btn-text {
					&::before {
						margin-right: $symbol-margin;
					}
				}
			}

			&[class*="symbol-rtl"] {
				padding-right: calc($padding-left * 3 / 4);
				.btn-text {
					&::after {
						margin-left: $symbol-margin;
					}
				}
			}
		}
	}
}

/*
 * btn module-c system
*/

/*
* @ module-c accent
*
* @ $text-color
* @ $border-color
* @ $background-color
*/
$btn-module-c-accent: (
	'accent-01'		color(primary, 01) color(primary, 01) color(primary, 01),
	'accent-02'		color(secondary, 01) color(secondary, 01) color(secondary, 01),
	'normal-00'		color(base, 00) color(base, 00) color(base, 00),
	'normal-01'		color(base, 01) color(base, 01) color(base, 01),
	'normal-02'		color(base, 05) color(base, 05) color(base, 05),
	'normal-03'		color(base, 03) color(base, 06) color(base, 06),
);


/*
 * module-c outline
 *
 * @ $padding-right
 * @ $padding-left
 * @ $height
 * @ $font-weight
 * @ $line-height
 * @ $font-size
 * @ $border-width
 * @ $border-radius ($height / $border-radius)
 * @ $symbol-size
 * @ $symbol-margin
 */
$btn-module-c-outline: (
	'small'			22rem 22rem 44rem 700 1.5 14rem 2rem 6 1.5em 2rem,
	'medium'		24rem 24rem 48rem 700 1.5 16rem 2rem 6 1.5em 3rem,
	'large'			28rem 28rem 56rem 700 1.5 18rem 2rem 6 1.5em 4rem,
	'x-large'		32rem 32rem 70rem 700 1.5 21rem 2rem 6 1.5em 5rem,
);
// btn module-c reset
a.btn.module-c {
	text-decoration: none;
}
	
.btn.module-c {
	// general
	display: flex;
	align-items: center;
	justify-content: center;
	@include font((family: default)...);
	box-sizing: border-box;
	border-style: solid;

	.btn-text {
		display: flex;
		align-items: center;
		justify-content: center;
		text-align: center;
	}

	&.style-c {
		border-radius: 100em;
	}

	&[class*=symbol-ltr-] .btn-text::before,
	&[class*=symbol-rtl-] .btn-text::after {
		content: '';
		display: block;
		background-repeat: no-repeat;
		background-size: cover;
	}

	// accent
	@each $name, $text-color, $border-color, $background-color in $btn-module-c-accent {
		&.type-line.#{$name} {
			color: $text-color;
			border-color: $border-color;
			background-color: color(base, 10);

			// icon
			@each $icon-name, $icon in $symbol-list {
				&.symbol-ltr-#{$icon-name} {.btn-text {&::before {background-image: icon($icon-name, $text-color);}}}
				&.symbol-rtl-#{$icon-name} {.btn-text {&::after {background-image: icon($icon-name, $text-color);}}}
			}
		}

		&.type-fill.#{$name} {
			color: #fff;
			border-color: $border-color;
			background-color: $background-color;

			// icon
			@each $icon-name, $icon in $symbol-list {
				&.symbol-ltr-#{$icon-name} {.btn-text {&::before {background-image: icon($icon-name, #fff);}}}
				&.symbol-rtl-#{$icon-name} {.btn-text {&::after {background-image: icon($icon-name, #fff);}}}
			}
		}
	}

	// outline
	@each $name, $padding-right, $padding-left, $height, $font-weight, $line-height, $font-size, $border-width, $border-radius, $symbol-size, $symbol-margin in $btn-module-c-outline {
		&.#{$name} {
			padding-right: $padding-right;
			padding-left: $padding-left;
			height: $height;
			font-weight: $font-weight;
			line-height: $line-height;
			font-size: $font-size;
			border-width: $border-width;

			&.style-b {
				border-radius: calc($height / $border-radius);
			}

			// icon
			&[class*=symbol-ltr-] .btn-text::before,
			&[class*=symbol-rtl-] .btn-text::after {
				width: $symbol-size;
				min-width: $symbol-size;
				height: $symbol-size;
			}



			&[class*="symbol-ltr"] {
				padding-right: calc($padding-left * 3 / 4);
				.btn-text {
					&::before {
						margin-right: $symbol-margin;
					}
				}
			}

			&[class*="symbol-rtl"] {
				padding-right: calc($padding-left * 3 / 4);
				.btn-text {
					&::after {
						margin-left: $symbol-margin;
					}
				}
			}			
		}
	}
}



// button-area
.button-area.module-a {
	display: flex;

	&.style-a {
		// flex-wrap: wrap;
	
		.flex {
			flex-grow: 1;
			flex-basis: 100%;
		}
	
		.btn.medium {
			&~*,
			&+* {
				margin-left: 8rem;
			}
		}
	
		.btn.large {
			&~*,
			&+* {
				margin-left: 10rem;
			}
		}
	
		.btn.x-large {
			&~*,
			&+* {
				margin-left: 12rem;
			}
		}
	
		&.type-a {
	
		}
	
		&.type-b {
			justify-content: flex-end;
		}
	
		&.type-c {
			justify-content: center;
		}
	
		&.type-d {
			.btn {
				flex-grow: 1;
				flex-basis: 100%;
			}
		}
	}

	&.style-b {
		flex-wrap: wrap;
		
		.btn {
			flex-grow: 1;
			flex-basis: 100%;
		}

		.btn.medium {
			&~*,
			&+* {
				margin-top: 8rem;
			}
		}
	
		.btn.large {
			&~*,
			&+* {
				margin-top: 10rem;
			}
		}
	
		.btn.x-large {
			&~*,
			&+* {
				margin-top: 12rem;
			}
		}	
	}
}